# -*- coding: utf-8 -*-
"""IQR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a4ftf0ZyhHRRBfXUpMBUC53DJreneypn
"""

import numpy as np

# User input for data points
data_input = input("Enter data points separated by spaces: ")
data = [float(point) for point in data_input.split()]

# Sort the data
sort_data = np.sort(data)

# Calculate quartiles and IQR
Q1 = np.percentile(sort_data, 25)
Q3 = np.percentile(sort_data, 75)
IQR = Q3 - Q1

# Calculate median
median = np.median(sort_data)

# Calculate lower and upper bounds
low_lim = Q1 - 1.5 * IQR
up_lim = Q3 + 1.5 * IQR

# Identify outliers
outliers = np.where((sort_data < low_lim) | (sort_data > up_lim))

print("Sorted Data:", sort_data)
print('Q1 (25th percentile):', Q1)
print('Q3 (75th percentile):', Q3)
print('Median:', median)
print('Interquartile range (IQR):', IQR)
print('Lower bound:', low_lim)
print('Upper bound:', up_lim)
print('Outliers:', sort_data[outliers])

#26,37,24,28,35,22,31,53,41,64,29
def calculate_iqr(data):
    # Sort the data in ascending order
    sorted_data = sorted(data)

    # Determine the number of data points
    n = len(sorted_data)

    # Calculate the indices for the first quartile (Q1) and third quartile (Q3)
    q1_index = n // 4
    q3_index = 3 * n // 4

    # Extract the values for Q1 and Q3
    q1 = sorted_data[q1_index]
    q3 = sorted_data[q3_index]

    # Calculate the interquartile range (IQR)
    iqr = q3 - q1

    # Define the lower and upper limits for potential outliers
    lower_limit = q1 - 1.5 * iqr
    upper_limit = q3 + 1.5 * iqr

    # Identify potential outliers in the dataset
    outliers = [x for x in sorted_data if x < lower_limit or x > upper_limit]

    # Return the calculated quartiles, IQR, lower limit, upper limit, and potential outliers
    return q1, q3, iqr, lower_limit, upper_limit, outliers

# Prompt the user to input a dataset (comma-separated values)
user_input = input("Enter your dataset (comma-separated values): ")
data = [float(x.strip()) for x in user_input.split(",")]

# Call the function to calculate quartiles, IQR, lower limit, upper limit, and potential outliers
q1, q3, iqr, lower_limit, upper_limit, outliers = calculate_iqr(data)

# Display the results
print(f"First Quartile (Q1): {q1}")
print(f"Third Quartile (Q3): {q3}")
print(f"Lower limit: {lower_limit}")
print(f"Upper limit: {upper_limit}")
print(f"IQR: {iqr}")
print(f"Potential outliers: {outliers}")