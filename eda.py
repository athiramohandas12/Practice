# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ilbxdjFZr37gCYRcn9CaP1i3ETAojOOm
"""

# Importing the required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Reading the dataset
df = pd.read_csv('/content/flavors_of_cacao.csv')

# Checking for missing values
print(df.isna().sum())

# Filling missing values with appropriate values
df.fillna(value=0, inplace=True)

# Univariate Analysis
sns.histplot(df['Rating'])
plt.show()

# Multivariate Analysis
sns.pairplot(df[['Cocoa\nPercent', 'Rating']])
plt.show()

# Statistical Summary
print(df.describe())

# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
url = "https://www.kaggle.com/datasets/rtatman/chocolate-bar-ratings"
# Download the dataset manually and load it using pandas
# df = pd.read_csv("path_to_downloaded_file.csv")

# For demonstration purposes, assuming the file is already downloaded and loaded
df = pd.read_csv("flavors_of_cacao.csv")

# Clean column names
df.columns = df.columns.str.strip().str.replace('\n', '_')

# Display the first few rows of the dataset
print(df.head())

# Basic information about the dataset
print(df.info())

# Summary statistics
print(df.describe())

# Check for missing values
print(df.isnull().sum())

# Feature Engineering
# Assuming you have a "Review_Date" column, you can extract year and month for analysis
df['Review_Year'] = pd.to_datetime(df['Review_Date'], format='%Y').dt.year
df['Review_Month'] = pd.to_datetime(df['Review_Date'], format='%Y').dt.month

# Data Cleaning
# Handling missing values
# Assuming you want to fill missing values in 'Bean_Type' with a placeholder 'Unknown'
df['Bean_Type'].fillna('Unknown', inplace=True)
df['Broad Bean_Origin'].fillna('Unknown', inplace=True)  # Corrected column name

# Convert 'Cocoa_Percent' to numeric
df['Cocoa_Percent'] = df['Cocoa_Percent'].str.rstrip('%').astype('float') / 100.0

# Univariate Analysis
# Let's visualize the distribution of Rating
plt.figure(figsize=(10, 6))
sns.histplot(df['Rating'], bins=30, kde=True)
plt.title('Distribution of Ratings')
plt.xlabel('Rating')
plt.ylabel('Frequency')
plt.show()

# Multivariate Analysis
# Pairplot for selected columns
cols_to_plot = ['Cocoa_Percent', 'Rating', 'Review_Year', 'Review_Month']
sns.pairplot(df[cols_to_plot])
plt.show()

# Correlation matrix
correlation_matrix = df[cols_to_plot].corr()
plt.figure(figsize=(10, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=.5)
plt.title('Correlation Matrix')
plt.show()

# Display the column names to verify
print(df.columns)